// <auto-generated />
using System;
using MiataBot;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace MiataBot.Migrations
{
    [DbContext(typeof(MiataDbContext))]
    partial class MiataDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("MiataBot.Car", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("id");

                    b.Property<string>("Blurb")
                        .HasColumnType("text")
                        .HasColumnName("blurb");

                    b.Property<string>("Color")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("color");

                    b.Property<string>("Make")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("make");

                    b.Property<string>("Model")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("model");

                    b.Property<DateOnly?>("OwnedSince")
                        .HasColumnType("date")
                        .HasColumnName("owned_since");

                    b.Property<long>("OwnerId")
                        .HasColumnType("bigint")
                        .HasColumnName("owner_id");

                    b.Property<string>("PetName")
                        .HasColumnType("text")
                        .HasColumnName("pet_name");

                    b.Property<string>("VIN")
                        .HasColumnType("text")
                        .HasColumnName("vin");

                    b.Property<int>("Year")
                        .HasColumnType("integer")
                        .HasColumnName("year");

                    b.HasKey("Id")
                        .HasName("pk_cars");

                    b.HasIndex("OwnerId")
                        .HasDatabaseName("ix_cars_owner_id");

                    b.ToTable("cars", (string)null);
                });

            modelBuilder.Entity("MiataBot.CarMedia", b =>
                {
                    b.Property<Guid>("ObjectKey")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("object_key");

                    b.Property<Guid>("CarId")
                        .HasColumnType("uuid")
                        .HasColumnName("car_id");

                    b.HasKey("ObjectKey")
                        .HasName("pk_media");

                    b.HasIndex("CarId")
                        .HasDatabaseName("ix_media_car_id");

                    b.ToTable("media", (string)null);
                });

            modelBuilder.Entity("MiataBot.CarMetadata", b =>
                {
                    b.Property<Guid>("CarId")
                        .HasColumnType("uuid")
                        .HasColumnName("car_id");

                    b.Property<string>("Name")
                        .HasColumnType("text")
                        .HasColumnName("name");

                    b.Property<string>("Value")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("value");

                    b.HasKey("CarId", "Name")
                        .HasName("pk_metadata");

                    b.ToTable("metadata", (string)null);
                });

            modelBuilder.Entity("MiataBot.CarOwner", b =>
                {
                    b.Property<long>("UserId")
                        .HasColumnType("bigint")
                        .HasColumnName("user_id");

                    b.Property<Guid?>("DefaultCarId")
                        .HasColumnType("uuid")
                        .HasColumnName("default_car_id");

                    b.HasKey("UserId")
                        .HasName("pk_owners");

                    b.ToTable("owners", (string)null);
                });

            modelBuilder.Entity("MiataBot.CopypastaEntry", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<long>("GuildId")
                        .HasColumnType("bigint")
                        .HasColumnName("guild_id");

                    b.Property<string>("Text")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("text");

                    b.Property<long>("UserId")
                        .HasColumnType("bigint")
                        .HasColumnName("user_id");

                    b.HasKey("Id")
                        .HasName("pk_copypastas");

                    b.HasIndex("GuildId")
                        .HasDatabaseName("ix_copypastas_guild_id");

                    b.HasIndex("UserId")
                        .HasDatabaseName("ix_copypastas_user_id");

                    b.ToTable("copypastas", (string)null);
                });

            modelBuilder.Entity("MiataBot.GuildConfiguration", b =>
                {
                    b.Property<long>("Id")
                        .HasColumnType("bigint")
                        .HasColumnName("id");

                    b.HasKey("Id")
                        .HasName("pk_guild_configurations");

                    b.ToTable("guild_configurations", (string)null);
                });

            modelBuilder.Entity("MiataBot.TimedRoleEntry", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTimeOffset>("ExpiresAt")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("expires_at");

                    b.Property<long[]>("GrantedRoleIds")
                        .IsRequired()
                        .HasColumnType("bigint[]")
                        .HasColumnName("granted_role_ids");

                    b.Property<long>("GuildId")
                        .HasColumnType("bigint")
                        .HasColumnName("guild_id");

                    b.Property<long[]>("RevokedRoleIds")
                        .IsRequired()
                        .HasColumnType("bigint[]")
                        .HasColumnName("revoked_role_ids");

                    b.Property<long>("UserId")
                        .HasColumnType("bigint")
                        .HasColumnName("user_id");

                    b.HasKey("Id")
                        .HasName("pk_timed_role_entries");

                    b.HasIndex("GuildId")
                        .HasDatabaseName("ix_timed_role_entries_guild_id");

                    b.HasIndex("UserId")
                        .HasDatabaseName("ix_timed_role_entries_user_id");

                    b.ToTable("timed_role_entries", (string)null);
                });

            modelBuilder.Entity("MiataBot.Car", b =>
                {
                    b.HasOne("MiataBot.CarOwner", "Owner")
                        .WithMany("Cars")
                        .HasForeignKey("OwnerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_cars_owners_owner_id");

                    b.Navigation("Owner");
                });

            modelBuilder.Entity("MiataBot.CarMedia", b =>
                {
                    b.HasOne("MiataBot.Car", "Car")
                        .WithMany("Media")
                        .HasForeignKey("CarId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_media_cars_car_id");

                    b.Navigation("Car");
                });

            modelBuilder.Entity("MiataBot.CarMetadata", b =>
                {
                    b.HasOne("MiataBot.Car", "Car")
                        .WithMany("Metadata")
                        .HasForeignKey("CarId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_metadata_cars_car_id");

                    b.Navigation("Car");
                });

            modelBuilder.Entity("MiataBot.CopypastaEntry", b =>
                {
                    b.HasOne("MiataBot.GuildConfiguration", "Guild")
                        .WithMany("Copypastas")
                        .HasForeignKey("GuildId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_copypastas_guild_configurations_guild_id");

                    b.Navigation("Guild");
                });

            modelBuilder.Entity("MiataBot.TimedRoleEntry", b =>
                {
                    b.HasOne("MiataBot.GuildConfiguration", "Guild")
                        .WithMany("TimedRoleEntries")
                        .HasForeignKey("GuildId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_timed_role_entries_guild_configurations_guild_id");

                    b.Navigation("Guild");
                });

            modelBuilder.Entity("MiataBot.Car", b =>
                {
                    b.Navigation("Media");

                    b.Navigation("Metadata");
                });

            modelBuilder.Entity("MiataBot.CarOwner", b =>
                {
                    b.Navigation("Cars");
                });

            modelBuilder.Entity("MiataBot.GuildConfiguration", b =>
                {
                    b.Navigation("Copypastas");

                    b.Navigation("TimedRoleEntries");
                });
#pragma warning restore 612, 618
        }
    }
}
